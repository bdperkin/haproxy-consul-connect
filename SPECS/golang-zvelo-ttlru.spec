# Generated by go2rpm 1.3
%bcond_without check

# https://github.com/zvelo/ttlru
%global goipath         zvelo.io/ttlru
%global forgeurl        https://github.com/zvelo/ttlru
Version:                1.0.10

%gometa

%global common_description %{expand:
Package ttlru provides a simple, goroutine safe, cache with a fixed number of
entries. Each entry has a per-cache defined TTL. This TTL is reset on both
modification and access to the value. As a result, if the cache is full, and
no items have expired, when adding a new item, the item with the soonest
expiration will be evicted. It is based on the LRU implementation in
golang-lru:}

%global golicenses      LICENSE
%global godocs          README.md

Name:           %{goname}
Release:        1%{?dist}
Summary:        Package ttlru provides a simple, goroutine safe, cache with a fixed number of entries

License:        MIT
URL:            %{gourl}
Source0:        %{gosource}

%if %{with check}
# Tests
BuildRequires:  golang(github.com/stretchr/testify/require)
%endif

%description
%{common_description}

%gopkg

%prep
%goprep

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog

